{"version":3,"sources":["components/MenuItem.tsx","pokedex.ts","components/Menu.tsx","components/Stats.tsx","components/Types.tsx","components/Abilities.tsx","components/Entries.tsx","components/Display.tsx","components/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MenuItem","props","name","number","img","setCurrPoke","index","onClick","id","src","alt","pokedex","Menu","useState","filter","setFilter","Math","floor","window","innerHeight","display","setDisplay","threshhold","setThreshold","pokeNames","Pokedex","map","pokemon","filteredPokeNames","toLowerCase","includes","slice","min","length","autoComplete","value","onChange","e","target","placeholder","onScroll","currentTarget","scrollTop","handleScroll","style","overflow","height","processNumber","color","Stats","hp","attack","defense","spatk","spdef","speed","className","background","width","typeColorMap","Steel","Fighting","Fire","Water","Dark","Psychic","Fairy","Normal","Rock","Ground","Bug","Poison","Dragon","Flying","Grass","Electric","Ice","Ghost","Types","types","ability","ability1","setAbility1","ability2","setAbility2","useEffect","fetch","then","res","json","result","capitalize","effect_entries","language","effect","text","toUpperCase","substring","textAlign","entry","weight","exp","Display","setEntry","setExp","setHeight","setWeight","abilities","setAbilities","stats","setStats","setTypes","isLoaded","setIsLoaded","textentry","flavor_text_entries","flavor_text","base_experience","url","stat","base_stat","type","Abilities","Entries","Home","currPoke","num","stringNum","toString","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gPA0BeA,EAhBwB,SAACC,GAAW,IACzCC,EAA0CD,EAA1CC,KAAMC,EAAoCF,EAApCE,OAAQC,EAA4BH,EAA5BG,IAAKC,EAAuBJ,EAAvBI,YAAaC,EAAUL,EAAVK,MACxC,OACE,6BACE,yBACEC,QAAS,WACPF,EAAYC,IAEdE,GAAG,YACH,yBAAKC,IAAKL,EAAKM,IAAI,SACnB,0CAASP,EAAT,cAAqBD,GAArB,QCwxBOS,EA5yBC,CACd,YACA,UACA,WACA,aACA,aACA,YACA,WACA,YACA,YACA,WACA,UACA,aACA,SACA,SACA,WACA,SACA,YACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,WACA,SACA,YACA,aACA,aACA,QACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,YACA,WACA,UACA,YACA,YACA,OACA,UACA,WACA,SACA,UACA,UACA,aACA,aACA,aACA,YACA,aACA,UACA,WACA,QACA,SACA,WACA,WACA,UACA,YACA,WACA,YACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,WACA,SACA,UACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,YACA,YACA,YACA,SACA,UACA,YACA,aACA,YACA,UACA,UACA,UACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,OACA,aACA,SACA,SACA,SACA,WACA,WACA,SACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,YACA,SACA,MACA,YACA,UACA,WACA,YACA,UACA,aACA,WACA,WACA,aACA,UACA,SACA,WACA,UACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,OACA,OACA,SACA,UACA,WACA,YACA,SACA,YACA,YACA,WACA,SACA,WACA,WACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,UACA,WACA,aACA,QACA,YACA,YACA,SACA,aACA,YACA,SACA,UACA,WACA,WACA,WACA,SACA,UACA,YACA,UACA,YACA,WACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,UACA,YACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,SACA,YACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,UACA,SACA,QACA,SACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,QACA,SACA,YACA,UACA,aACA,YACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,SACA,OACA,SACA,SACA,WACA,WACA,YACA,YACA,SACA,QACA,UACA,WACA,UACA,SACA,SACA,WACA,WACA,UACA,UACA,QACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,SACA,SACA,WACA,SACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,UACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,SACA,SACA,YACA,WACA,SACA,YACA,SACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,YACA,SACA,UACA,YACA,aACA,QACA,QACA,SACA,QACA,WACA,WACA,YACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,UACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,WACA,QACA,UACA,aACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,UACA,SACA,YACA,UACA,YACA,aACA,YACA,YACA,aACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,WACA,QACA,OACA,UACA,QACA,SACA,SACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,YACA,QACA,UACA,SACA,WACA,SACA,WACA,SACA,UACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,QACA,WACA,SACA,YACA,WACA,UACA,YACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,SACA,UACA,UACA,aACA,UACA,YACA,aACA,QACA,OACA,WACA,WACA,WACA,WACA,aACA,YACA,WACA,aACA,UACA,YACA,WACA,UACA,WACA,aACA,WACA,aACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,aACA,WACA,aACA,SACA,WACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,YACA,aACA,UACA,UACA,YACA,WACA,SACA,YACA,YACA,YACA,WACA,WACA,SACA,aACA,aACA,UACA,YACA,WACA,YACA,YACA,SACA,aACA,YACA,aACA,QACA,QACA,YACA,SACA,YACA,aACA,SACA,WACA,UACA,UACA,aACA,OACA,UACA,UACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,YACA,SACA,SACA,WACA,UACA,aACA,UACA,WACA,UACA,YACA,UACA,SACA,QACA,WACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,WACA,WACA,UACA,YACA,aACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,aACA,cACA,aACA,aACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,SACA,WACA,UACA,WACA,YACA,WACA,aACA,UACA,WACA,QACA,UACA,UACA,aACA,SACA,WACA,YACA,YACA,aACA,YACA,SACA,YACA,SACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,SACA,WACA,YACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,QACA,YACA,SACA,UACA,YACA,SACA,WACA,aACA,UACA,UACA,YACA,UACA,WACA,YACA,UACA,WACA,UACA,YACA,WACA,aACA,eACA,WACA,WACA,WACA,WACA,WACA,aACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,WACA,WACA,UACA,SACA,YACA,UACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,YACA,WACA,SACA,SACA,aACA,aACA,UACA,UACA,SACA,WACA,WACA,WACA,UACA,YACA,YACA,YACA,YACA,SACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,aACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,YACA,cACA,UACA,SACA,YC/tBaC,EAjEoB,SAACX,GAAW,IAAD,EAChBY,mBAAS,IADO,mBACrCC,EADqC,KAC7BC,EAD6B,OAEdF,mBAASG,KAAKC,MAAMC,OAAOC,YAAc,KAF3B,mBAErCC,EAFqC,KAE5BC,EAF4B,OAGTR,mBAASK,OAAOC,aAHP,mBAGrCG,EAHqC,KAGzBC,EAHyB,KAItCC,EAAYC,EAAQC,KAAI,SAACC,EAASrB,GAAV,MAAqB,CACjDE,GAAIF,EAAQ,EACZJ,KAAMyB,MAWJC,EAAoBJ,EAAUV,QAAO,SAACa,GACxC,OAAOA,EAAQzB,KAAK2B,cAAcC,SAAShB,EAAOe,kBAQpD,OALAD,EAAoBA,EAAkBG,MACpC,EACAf,KAAKgB,IAAIJ,EAAkBK,OAAQb,IAInC,yBAAKZ,GAAG,iBACN,2BACE0B,aAAc,QACdC,MAAOrB,EACPsB,SAAU,SAACC,GACTtB,EAAUsB,EAAEC,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","file":"static/js/main.4625c851.chunk.js","sourcesContent":["import React from \"react\";\n\nexport interface IhomeProps {\n  name: string;\n  number: string;\n  index: number;\n  img: string;\n  setCurrPoke: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst MenuItem: React.FC<IhomeProps> = (props) => {\n  const { name, number, img, setCurrPoke, index } = props;\n  return (\n    <div>\n      <div\n        onClick={() => {\n          setCurrPoke(index);\n        }}\n        id='menuItem'>\n        <img src={img} alt='icon' />\n        <p> {`#${number} - ${name}`} </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuItem;\n","const pokedex = [\n  \"Bulbasaur\",\n  \"Ivysaur\",\n  \"Venusaur\",\n  \"Charmander\",\n  \"Charmeleon\",\n  \"Charizard\",\n  \"Squirtle\",\n  \"Wartortle\",\n  \"Blastoise\",\n  \"Caterpie\",\n  \"Metapod\",\n  \"Butterfree\",\n  \"Weedle\",\n  \"Kakuna\",\n  \"Beedrill\",\n  \"Pidgey\",\n  \"Pidgeotto\",\n  \"Pidgeot\",\n  \"Rattata\",\n  \"Raticate\",\n  \"Spearow\",\n  \"Fearow\",\n  \"Ekans\",\n  \"Arbok\",\n  \"Pikachu\",\n  \"Raichu\",\n  \"Sandshrew\",\n  \"Sandslash\",\n  \"Nidoran-f\",\n  \"Nidorina\",\n  \"Nidoqueen\",\n  \"Nidoran-m\",\n  \"Nidorino\",\n  \"Nidoking\",\n  \"Clefairy\",\n  \"Clefable\",\n  \"Vulpix\",\n  \"Ninetales\",\n  \"Jigglypuff\",\n  \"Wigglytuff\",\n  \"Zubat\",\n  \"Golbat\",\n  \"Oddish\",\n  \"Gloom\",\n  \"Vileplume\",\n  \"Paras\",\n  \"Parasect\",\n  \"Venonat\",\n  \"Venomoth\",\n  \"Diglett\",\n  \"Dugtrio\",\n  \"Meowth\",\n  \"Persian\",\n  \"Psyduck\",\n  \"Golduck\",\n  \"Mankey\",\n  \"Primeape\",\n  \"Growlithe\",\n  \"Arcanine\",\n  \"Poliwag\",\n  \"Poliwhirl\",\n  \"Poliwrath\",\n  \"Abra\",\n  \"Kadabra\",\n  \"Alakazam\",\n  \"Machop\",\n  \"Machoke\",\n  \"Machamp\",\n  \"Bellsprout\",\n  \"Weepinbell\",\n  \"Victreebel\",\n  \"Tentacool\",\n  \"Tentacruel\",\n  \"Geodude\",\n  \"Graveler\",\n  \"Golem\",\n  \"Ponyta\",\n  \"Rapidash\",\n  \"Slowpoke\",\n  \"Slowbro\",\n  \"Magnemite\",\n  \"Magneton\",\n  \"Farfetchd\",\n  \"Doduo\",\n  \"Dodrio\",\n  \"Seel\",\n  \"Dewgong\",\n  \"Grimer\",\n  \"Muk\",\n  \"Shellder\",\n  \"Cloyster\",\n  \"Gastly\",\n  \"Haunter\",\n  \"Gengar\",\n  \"Onix\",\n  \"Drowzee\",\n  \"Hypno\",\n  \"Krabby\",\n  \"Kingler\",\n  \"Voltorb\",\n  \"Electrode\",\n  \"Exeggcute\",\n  \"Exeggutor\",\n  \"Cubone\",\n  \"Marowak\",\n  \"Hitmonlee\",\n  \"Hitmonchan\",\n  \"Lickitung\",\n  \"Koffing\",\n  \"Weezing\",\n  \"Rhyhorn\",\n  \"Rhydon\",\n  \"Chansey\",\n  \"Tangela\",\n  \"Kangaskhan\",\n  \"Horsea\",\n  \"Seadra\",\n  \"Goldeen\",\n  \"Seaking\",\n  \"Staryu\",\n  \"Starmie\",\n  \"Mr-Mime\",\n  \"Scyther\",\n  \"Jynx\",\n  \"Electabuzz\",\n  \"Magmar\",\n  \"Pinsir\",\n  \"Tauros\",\n  \"Magikarp\",\n  \"Gyarados\",\n  \"Lapras\",\n  \"Ditto\",\n  \"Eevee\",\n  \"Vaporeon\",\n  \"Jolteon\",\n  \"Flareon\",\n  \"Porygon\",\n  \"Omanyte\",\n  \"Omastar\",\n  \"Kabuto\",\n  \"Kabutops\",\n  \"Aerodactyl\",\n  \"Snorlax\",\n  \"Articuno\",\n  \"Zapdos\",\n  \"Moltres\",\n  \"Dratini\",\n  \"Dragonair\",\n  \"Dragonite\",\n  \"Mewtwo\",\n  \"Mew\",\n  \"Chikorita\",\n  \"Bayleef\",\n  \"Meganium\",\n  \"Cyndaquil\",\n  \"Quilava\",\n  \"Typhlosion\",\n  \"Totodile\",\n  \"Croconaw\",\n  \"Feraligatr\",\n  \"Sentret\",\n  \"Furret\",\n  \"Hoothoot\",\n  \"Noctowl\",\n  \"Ledyba\",\n  \"Ledian\",\n  \"Spinarak\",\n  \"Ariados\",\n  \"Crobat\",\n  \"Chinchou\",\n  \"Lanturn\",\n  \"Pichu\",\n  \"Cleffa\",\n  \"Igglybuff\",\n  \"Togepi\",\n  \"Togetic\",\n  \"Natu\",\n  \"Xatu\",\n  \"Mareep\",\n  \"Flaaffy\",\n  \"Ampharos\",\n  \"Bellossom\",\n  \"Marill\",\n  \"Azumarill\",\n  \"Sudowoodo\",\n  \"Politoed\",\n  \"Hoppip\",\n  \"Skiploom\",\n  \"Jumpluff\",\n  \"Aipom\",\n  \"Sunkern\",\n  \"Sunflora\",\n  \"Yanma\",\n  \"Wooper\",\n  \"Quagsire\",\n  \"Espeon\",\n  \"Umbreon\",\n  \"Murkrow\",\n  \"Slowking\",\n  \"Misdreavus\",\n  \"Unown\",\n  \"Wobbuffet\",\n  \"Girafarig\",\n  \"Pineco\",\n  \"Forretress\",\n  \"Dunsparce\",\n  \"Gligar\",\n  \"Steelix\",\n  \"Snubbull\",\n  \"Granbull\",\n  \"Qwilfish\",\n  \"Scizor\",\n  \"Shuckle\",\n  \"Heracross\",\n  \"Sneasel\",\n  \"Teddiursa\",\n  \"Ursaring\",\n  \"Slugma\",\n  \"Magcargo\",\n  \"Swinub\",\n  \"Piloswine\",\n  \"Corsola\",\n  \"Remoraid\",\n  \"Octillery\",\n  \"Delibird\",\n  \"Mantine\",\n  \"Skarmory\",\n  \"Houndour\",\n  \"Houndoom\",\n  \"Kingdra\",\n  \"Phanpy\",\n  \"Donphan\",\n  \"Porygon2\",\n  \"Stantler\",\n  \"Smeargle\",\n  \"Tyrogue\",\n  \"Hitmontop\",\n  \"Smoochum\",\n  \"Elekid\",\n  \"Magby\",\n  \"Miltank\",\n  \"Blissey\",\n  \"Raikou\",\n  \"Entei\",\n  \"Suicune\",\n  \"Larvitar\",\n  \"Pupitar\",\n  \"Tyranitar\",\n  \"Lugia\",\n  \"Ho-Oh\",\n  \"Celebi\",\n  \"Treecko\",\n  \"Grovyle\",\n  \"Sceptile\",\n  \"Torchic\",\n  \"Combusken\",\n  \"Blaziken\",\n  \"Mudkip\",\n  \"Marshtomp\",\n  \"Swampert\",\n  \"Poochyena\",\n  \"Mightyena\",\n  \"Zigzagoon\",\n  \"Linoone\",\n  \"Wurmple\",\n  \"Silcoon\",\n  \"Beautifly\",\n  \"Cascoon\",\n  \"Dustox\",\n  \"Lotad\",\n  \"Lombre\",\n  \"Ludicolo\",\n  \"Seedot\",\n  \"Nuzleaf\",\n  \"Shiftry\",\n  \"Taillow\",\n  \"Swellow\",\n  \"Wingull\",\n  \"Pelipper\",\n  \"Ralts\",\n  \"Kirlia\",\n  \"Gardevoir\",\n  \"Surskit\",\n  \"Masquerain\",\n  \"Shroomish\",\n  \"Breloom\",\n  \"Slakoth\",\n  \"Vigoroth\",\n  \"Slaking\",\n  \"Nincada\",\n  \"Ninjask\",\n  \"Shedinja\",\n  \"Whismur\",\n  \"Loudred\",\n  \"Exploud\",\n  \"Makuhita\",\n  \"Hariyama\",\n  \"Azurill\",\n  \"Nosepass\",\n  \"Skitty\",\n  \"Delcatty\",\n  \"Sableye\",\n  \"Mawile\",\n  \"Aron\",\n  \"Lairon\",\n  \"Aggron\",\n  \"Meditite\",\n  \"Medicham\",\n  \"Electrike\",\n  \"Manectric\",\n  \"Plusle\",\n  \"Minun\",\n  \"Volbeat\",\n  \"Illumise\",\n  \"Roselia\",\n  \"Gulpin\",\n  \"Swalot\",\n  \"Carvanha\",\n  \"Sharpedo\",\n  \"Wailmer\",\n  \"Wailord\",\n  \"Numel\",\n  \"Camerupt\",\n  \"Torkoal\",\n  \"Spoink\",\n  \"Grumpig\",\n  \"Spinda\",\n  \"Trapinch\",\n  \"Vibrava\",\n  \"Flygon\",\n  \"Cacnea\",\n  \"Cacturne\",\n  \"Swablu\",\n  \"Altaria\",\n  \"Zangoose\",\n  \"Seviper\",\n  \"Lunatone\",\n  \"Solrock\",\n  \"Barboach\",\n  \"Whiscash\",\n  \"Corphish\",\n  \"Crawdaunt\",\n  \"Baltoy\",\n  \"Claydol\",\n  \"Lileep\",\n  \"Cradily\",\n  \"Anorith\",\n  \"Armaldo\",\n  \"Feebas\",\n  \"Milotic\",\n  \"Castform\",\n  \"Kecleon\",\n  \"Shuppet\",\n  \"Banette\",\n  \"Duskull\",\n  \"Dusclops\",\n  \"Tropius\",\n  \"Chimecho\",\n  \"Absol\",\n  \"Wynaut\",\n  \"Snorunt\",\n  \"Glalie\",\n  \"Spheal\",\n  \"Sealeo\",\n  \"Walrein\",\n  \"Clamperl\",\n  \"Huntail\",\n  \"Gorebyss\",\n  \"Relicanth\",\n  \"Luvdisc\",\n  \"Bagon\",\n  \"Shelgon\",\n  \"Salamence\",\n  \"Beldum\",\n  \"Metang\",\n  \"Metagross\",\n  \"Regirock\",\n  \"Regice\",\n  \"Registeel\",\n  \"Latias\",\n  \"Latios\",\n  \"Kyogre\",\n  \"Groudon\",\n  \"Rayquaza\",\n  \"Jirachi\",\n  \"Deoxys\",\n  \"Turtwig\",\n  \"Grotle\",\n  \"Torterra\",\n  \"Chimchar\",\n  \"Monferno\",\n  \"Infernape\",\n  \"Piplup\",\n  \"Prinplup\",\n  \"Empoleon\",\n  \"Starly\",\n  \"Staravia\",\n  \"Staraptor\",\n  \"Bidoof\",\n  \"Bibarel\",\n  \"Kricketot\",\n  \"Kricketune\",\n  \"Shinx\",\n  \"Luxio\",\n  \"Luxray\",\n  \"Budew\",\n  \"Roserade\",\n  \"Cranidos\",\n  \"Rampardos\",\n  \"Shieldon\",\n  \"Bastiodon\",\n  \"Burmy\",\n  \"Wormadam\",\n  \"Mothim\",\n  \"Combee\",\n  \"Vespiquen\",\n  \"Pachirisu\",\n  \"Buizel\",\n  \"Floatzel\",\n  \"Cherubi\",\n  \"Cherrim\",\n  \"Shellos\",\n  \"Gastrodon\",\n  \"Ambipom\",\n  \"Drifloon\",\n  \"Drifblim\",\n  \"Buneary\",\n  \"Lopunny\",\n  \"Mismagius\",\n  \"Honchkrow\",\n  \"Glameow\",\n  \"Purugly\",\n  \"Chingling\",\n  \"Stunky\",\n  \"Skuntank\",\n  \"Bronzor\",\n  \"Bronzong\",\n  \"Bonsly\",\n  \"Mime-Jr\",\n  \"Happiny\",\n  \"Chatot\",\n  \"Spiritomb\",\n  \"Gible\",\n  \"Gabite\",\n  \"Garchomp\",\n  \"Munchlax\",\n  \"Riolu\",\n  \"Lucario\",\n  \"Hippopotas\",\n  \"Hippowdon\",\n  \"Skorupi\",\n  \"Drapion\",\n  \"Croagunk\",\n  \"Toxicroak\",\n  \"Carnivine\",\n  \"Finneon\",\n  \"Lumineon\",\n  \"Mantyke\",\n  \"Snover\",\n  \"Abomasnow\",\n  \"Weavile\",\n  \"Magnezone\",\n  \"Lickilicky\",\n  \"Rhyperior\",\n  \"Tangrowth\",\n  \"Electivire\",\n  \"Magmortar\",\n  \"Togekiss\",\n  \"Yanmega\",\n  \"Leafeon\",\n  \"Glaceon\",\n  \"Gliscor\",\n  \"Mamoswine\",\n  \"Porygon-Z\",\n  \"Gallade\",\n  \"Probopass\",\n  \"Dusknoir\",\n  \"Froslass\",\n  \"Rotom\",\n  \"Uxie\",\n  \"Mesprit\",\n  \"Azelf\",\n  \"Dialga\",\n  \"Palkia\",\n  \"Heatran\",\n  \"Regigigas\",\n  \"Giratina\",\n  \"Cresselia\",\n  \"Phione\",\n  \"Manaphy\",\n  \"Darkrai\",\n  \"Shaymin\",\n  \"Arceus\",\n  \"Victini\",\n  \"Snivy\",\n  \"Servine\",\n  \"Serperior\",\n  \"Tepig\",\n  \"Pignite\",\n  \"Emboar\",\n  \"Oshawott\",\n  \"Dewott\",\n  \"Samurott\",\n  \"Patrat\",\n  \"Watchog\",\n  \"Lillipup\",\n  \"Herdier\",\n  \"Stoutland\",\n  \"Purrloin\",\n  \"Liepard\",\n  \"Pansage\",\n  \"Simisage\",\n  \"Pansear\",\n  \"Simisear\",\n  \"Panpour\",\n  \"Simipour\",\n  \"Munna\",\n  \"Musharna\",\n  \"Pidove\",\n  \"Tranquill\",\n  \"Unfezant\",\n  \"Blitzle\",\n  \"Zebstrika\",\n  \"Roggenrola\",\n  \"Boldore\",\n  \"Gigalith\",\n  \"Woobat\",\n  \"Swoobat\",\n  \"Drilbur\",\n  \"Excadrill\",\n  \"Audino\",\n  \"Timburr\",\n  \"Gurdurr\",\n  \"Conkeldurr\",\n  \"Tympole\",\n  \"Palpitoad\",\n  \"Seismitoad\",\n  \"Throh\",\n  \"Sawk\",\n  \"Sewaddle\",\n  \"Swadloon\",\n  \"Leavanny\",\n  \"Venipede\",\n  \"Whirlipede\",\n  \"Scolipede\",\n  \"Cottonee\",\n  \"Whimsicott\",\n  \"Petilil\",\n  \"Lilligant\",\n  \"Basculin\",\n  \"Sandile\",\n  \"Krokorok\",\n  \"Krookodile\",\n  \"Darumaka\",\n  \"Darmanitan\",\n  \"Maractus\",\n  \"Dwebble\",\n  \"Crustle\",\n  \"Scraggy\",\n  \"Scrafty\",\n  \"Sigilyph\",\n  \"Yamask\",\n  \"Cofagrigus\",\n  \"Tirtouga\",\n  \"Carracosta\",\n  \"Archen\",\n  \"Archeops\",\n  \"Trubbish\",\n  \"Garbodor\",\n  \"Zorua\",\n  \"Zoroark\",\n  \"Minccino\",\n  \"Cinccino\",\n  \"Gothita\",\n  \"Gothorita\",\n  \"Gothitelle\",\n  \"Solosis\",\n  \"Duosion\",\n  \"Reuniclus\",\n  \"Ducklett\",\n  \"Swanna\",\n  \"Vanillite\",\n  \"Vanillish\",\n  \"Vanilluxe\",\n  \"Deerling\",\n  \"Sawsbuck\",\n  \"Emolga\",\n  \"Karrablast\",\n  \"Escavalier\",\n  \"Foongus\",\n  \"Amoonguss\",\n  \"Frillish\",\n  \"Jellicent\",\n  \"Alomomola\",\n  \"Joltik\",\n  \"Galvantula\",\n  \"Ferroseed\",\n  \"Ferrothorn\",\n  \"Klink\",\n  \"Klang\",\n  \"Klinklang\",\n  \"Tynamo\",\n  \"Eelektrik\",\n  \"Eelektross\",\n  \"Elgyem\",\n  \"Beheeyem\",\n  \"Litwick\",\n  \"Lampent\",\n  \"Chandelure\",\n  \"Axew\",\n  \"Fraxure\",\n  \"Haxorus\",\n  \"Cubchoo\",\n  \"Beartic\",\n  \"Cryogonal\",\n  \"Shelmet\",\n  \"Accelgor\",\n  \"Stunfisk\",\n  \"Mienfoo\",\n  \"Mienshao\",\n  \"Druddigon\",\n  \"Golett\",\n  \"Golurk\",\n  \"Pawniard\",\n  \"Bisharp\",\n  \"Bouffalant\",\n  \"Rufflet\",\n  \"Braviary\",\n  \"Vullaby\",\n  \"Mandibuzz\",\n  \"Heatmor\",\n  \"Durant\",\n  \"Deino\",\n  \"Zweilous\",\n  \"Hydreigon\",\n  \"Larvesta\",\n  \"Volcarona\",\n  \"Cobalion\",\n  \"Terrakion\",\n  \"Virizion\",\n  \"Tornadus\",\n  \"Thundurus\",\n  \"Reshiram\",\n  \"Zekrom\",\n  \"Landorus\",\n  \"Kyurem\",\n  \"Keldeo\",\n  \"Meloetta\",\n  \"Genesect\",\n  \"Chespin\",\n  \"Quilladin\",\n  \"Chesnaught\",\n  \"Fennekin\",\n  \"Braixen\",\n  \"Delphox\",\n  \"Froakie\",\n  \"Frogadier\",\n  \"Greninja\",\n  \"Bunnelby\",\n  \"Diggersby\",\n  \"Fletchling\",\n  \"Fletchinder\",\n  \"Talonflame\",\n  \"Scatterbug\",\n  \"Spewpa\",\n  \"Vivillon\",\n  \"Litleo\",\n  \"Pyroar\",\n  \"Flabebe\",\n  \"Floette\",\n  \"Florges\",\n  \"Skiddo\",\n  \"Gogoat\",\n  \"Pancham\",\n  \"Pangoro\",\n  \"Furfrou\",\n  \"Espurr\",\n  \"Meowstic\",\n  \"Honedge\",\n  \"Doublade\",\n  \"Aegislash\",\n  \"Spritzee\",\n  \"Aromatisse\",\n  \"Swirlix\",\n  \"Slurpuff\",\n  \"Inkay\",\n  \"Malamar\",\n  \"Binacle\",\n  \"Barbaracle\",\n  \"Skrelp\",\n  \"Dragalge\",\n  \"Clauncher\",\n  \"Clawitzer\",\n  \"Helioptile\",\n  \"Heliolisk\",\n  \"Tyrunt\",\n  \"Tyrantrum\",\n  \"Amaura\",\n  \"Aurorus\",\n  \"Sylveon\",\n  \"Hawlucha\",\n  \"Dedenne\",\n  \"Carbink\",\n  \"Goomy\",\n  \"Sliggoo\",\n  \"Goodra\",\n  \"Klefki\",\n  \"Phantump\",\n  \"Trevenant\",\n  \"Pumpkaboo\",\n  \"Gourgeist\",\n  \"Bergmite\",\n  \"Avalugg\",\n  \"Noibat\",\n  \"Noivern\",\n  \"Xerneas\",\n  \"Yveltal\",\n  \"Zygarde\",\n  \"Diancie\",\n  \"Hoopa\",\n  \"Volcanion\",\n  \"Rowlet\",\n  \"Dartrix\",\n  \"Decidueye\",\n  \"Litten\",\n  \"Torracat\",\n  \"Incineroar\",\n  \"Popplio\",\n  \"Brionne\",\n  \"Primarina\",\n  \"Pikipek\",\n  \"Trumbeak\",\n  \"Toucannon\",\n  \"Yungoos\",\n  \"Gumshoos\",\n  \"Grubbin\",\n  \"Charjabug\",\n  \"Vikavolt\",\n  \"Crabrawler\",\n  \"Crabominable\",\n  \"Oricorio\",\n  \"Cutiefly\",\n  \"Ribombee\",\n  \"Rockruff\",\n  \"Lycanroc\",\n  \"Wishiwashi\",\n  \"Mareanie\",\n  \"Toxapex\",\n  \"Mudbray\",\n  \"Mudsdale\",\n  \"Dewpider\",\n  \"Araquanid\",\n  \"Fomantis\",\n  \"Lurantis\",\n  \"Morelull\",\n  \"Shiinotic\",\n  \"Salandit\",\n  \"Salazzle\",\n  \"Stufful\",\n  \"Bewear\",\n  \"Bounsweet\",\n  \"Steenee\",\n  \"Tsareena\",\n  \"Comfey\",\n  \"Oranguru\",\n  \"Passimian\",\n  \"Wimpod\",\n  \"Golisopod\",\n  \"Sandygast\",\n  \"Palossand\",\n  \"Pyukumuku\",\n  \"Type-Null\",\n  \"Silvally\",\n  \"Minior\",\n  \"Komala\",\n  \"Turtonator\",\n  \"Togedemaru\",\n  \"Mimikyu\",\n  \"Bruxish\",\n  \"Drampa\",\n  \"Dhelmise\",\n  \"Jangmo-o\",\n  \"Hakamo-o\",\n  \"Kommo-o\",\n  \"Tapu-Koko\",\n  \"Tapu-Lele\",\n  \"Tapu-Bulu\",\n  \"Tapu-Fini\",\n  \"Cosmog\",\n  \"Cosmoem\",\n  \"Solgaleo\",\n  \"Lunala\",\n  \"Nihilego\",\n  \"Buzzwole\",\n  \"Pheromosa\",\n  \"Xurkitree\",\n  \"Celesteela\",\n  \"Kartana\",\n  \"Guzzlord\",\n  \"Necrozma\",\n  \"Magearna\",\n  \"Marshadow\",\n  \"Poipole\",\n  \"Naganadel\",\n  \"Stakataka\",\n  \"Blacephalon\",\n  \"Zeraora\",\n  \"Meltan\",\n  \"Melmetal\",\n];\n\nexport default pokedex;\n","import React, { useState } from \"react\";\nimport MenuItem from \"./MenuItem\";\nimport Pokedex from \"../pokedex\";\n\nexport interface ImenuProps {\n  setCurrPoke: React.Dispatch<React.SetStateAction<number>>;\n  processNumber: (num: number) => string;\n}\n\nconst Menu: React.FC<ImenuProps> = (props) => {\n  const [filter, setFilter] = useState(\"\");\n  const [display, setDisplay] = useState(Math.floor(window.innerHeight / 20)); //default number to display\n  const [threshhold, setThreshold] = useState(window.innerHeight); //default scroll threshold\n  const pokeNames = Pokedex.map((pokemon, index) => ({\n    id: index + 1,\n    name: pokemon,\n  }));\n\n  const handleScroll = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n    //update amount to display after scrolling past a certain point\n    if (e.currentTarget.scrollTop > threshhold) {\n      setDisplay(display + Math.floor(window.innerHeight / 25));\n      setThreshold(threshhold + window.innerHeight * 2 - 100);\n    }\n  };\n\n  let filteredPokeNames = pokeNames.filter((pokemon) => {\n    return pokemon.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  filteredPokeNames = filteredPokeNames.slice(\n    0,\n    Math.min(filteredPokeNames.length, display)\n  );\n\n  return (\n    <div id='menuContainer'>\n      <input\n        autoComplete={\"false\"}\n        value={filter}\n        onChange={(e) => {\n          setFilter(e.target.value);\n          setDisplay(24);\n          setThreshold(500);\n        }}\n        id='menuInput'\n        placeholder='Search...'\n      />\n      <div\n        onScroll={(e) => {\n          handleScroll(e);\n        }}\n        style={{ overflow: \"scroll\", height: \"93%\" }}>\n        {filteredPokeNames.map((pokemon) => (\n          <MenuItem\n            name={pokemon.name}\n            number={props.processNumber(pokemon.id)}\n            index={pokemon.id}\n            img={\n              \"https://img.pokemondb.net/sprites/home/normal/\" +\n              pokemon.name.toLowerCase() +\n              \".png\"\n            }\n            setCurrPoke={props.setCurrPoke}\n          />\n        ))}\n        {filteredPokeNames.length === 0 && (\n          <p style={{ color: \"white\" }}> No Pokemon Found </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { Fragment } from \"react\";\n\nexport interface IStatsProps {\n  hp: number;\n  attack: number;\n  defense: number;\n  spatk: number;\n  spdef: number;\n  speed: number;\n}\n\nconst Stats: React.FC<IStatsProps> = (props) => {\n  const { hp, attack, defense, spatk, spdef, speed } = props;\n  return (\n    <Fragment>\n      <div className='statContainer'>\n        <h2 className='subTitle'> Base Stats:</h2>\n        <p id='statName'> HP: </p>\n        <div className='statBar' style={{ background: \"red\", width: hp + \"px\" }}>\n          {hp}\n        </div>\n      </div>\n      <div className='statContainer'>\n        <p id='statName'> Attack: </p>\n        <div className='statBar' style={{ background: \"Orange\", width: attack + \"px\" }}>\n          {attack}\n        </div>\n      </div>\n      <div className='statContainer'>\n        <p id='statName'> Defense: </p>\n        <div className='statBar' style={{ background: \"Green\", width: defense + \"px\" }}>\n          {defense}\n        </div>\n      </div>\n      <div className='statContainer'>\n        <p id='statName'> Sp Atk: </p>\n        <div className='statBar' style={{ background: \"Purple\", width: spatk + \"px\" }}>\n          {spatk}\n        </div>\n      </div>\n      <div className='statContainer'>\n        <p id='statName'> Sp Def: </p>\n        <div className='statBar' style={{ background: \"Brown\", width: spdef + \"px\" }}>\n          {spdef}\n        </div>\n      </div>\n      <div className='statContainer'>\n        <p id='statName'> Speed: </p>\n        <div className='statBar' style={{ background: \"Blue\", width: speed + \"px\" }}>\n          {speed}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\n\nconst typeColorMap: any = {\n  Steel: \"#B7B7CE\",\n  Fighting: \"#C22E28\",\n  Fire: \"#EE8130\",\n  Water: \"#6390F0\",\n  Dark: \"#705746\",\n  Psychic: \"#F95587\",\n  Fairy: \"#D685AD\",\n  Normal: \"#A8A77A\",\n  Rock: \"#B6A136\",\n  Ground: \"#E2BF65\",\n  Bug: \"#A6B91A\",\n  Poison: \"#A33EA1\",\n  Dragon: \"#6F35FC\",\n  Flying: \"#A98FF3\",\n  Grass: \"#7AC74C\",\n  Electric: \"#F7D02C\",\n  Ice: \"#96D9D6\",\n  Ghost: \"#735797\",\n};\n\nexport interface ITypesProps {\n  types: string[];\n}\n\nconst Types: React.FC<ITypesProps> = (props) => {\n  const { types } = props;\n  //types are reversed because they are given in reverse order\n  return (\n    <div id='typeContainer'>\n      <h2 className='subTitle'> Type:</h2>\n      {types.length > 1 && (\n        <p style={{ background: typeColorMap[types[1]] }} id='pokeType'>\n          {types[1]}\n        </p>\n      )}\n      <p id='pokeType' style={{ background: typeColorMap[types[0]] }}>\n        {types[0]}\n      </p>\n    </div>\n  );\n};\n\nexport default Types;\n","import React, { Fragment, useEffect, useState } from \"react\";\n\nexport interface IAbilitiesProps {\n  ability: string[];\n}\n\nconst Types: React.FC<IAbilitiesProps> = (props) => {\n  const { ability } = props;\n  const [ability1, setAbility1] = useState<string[]>([]);\n  const [ability2, setAbility2] = useState<string[]>([]);\n\n  useEffect(() => {\n    fetch(ability[0])\n      .then((res) => res.json())\n      .then((result) => {\n        setAbility1([\n          capitalize(result.name),\n          result.effect_entries[0].language.name === \"en\"\n            ? result.effect_entries[0].effect\n            : result.effect_entries[1].effect,\n        ]);\n      });\n    if (ability.length > 1) {\n      //There is only one ability in some cases\n      fetch(ability[1])\n        .then((res) => res.json())\n        .then((result) => {\n          setAbility2([\n            capitalize(result.name),\n            result.effect_entries[0].language.name === \"en\"\n              ? result.effect_entries[0].effect\n              : result.effect_entries[1].effect,\n          ]);\n        });\n    } else {\n      setAbility2([]);\n    }\n  }, [ability]);\n\n  const capitalize = (text: string) => {\n    return text[0].toUpperCase() + text.substring(1);\n  };\n\n  return (\n    <div id='abilityContainer'>\n      <h2 className='subTitle' style={{ textAlign: \"center\" }}>\n        Abilities:\n      </h2>\n      <h2 id='abilityName'> {ability1[0]} </h2>\n      <p id='abilityBody'> {ability1[1]} </p>\n      {ability2.length > 0 && (\n        <Fragment>\n          <h2 id='abilityName'> {ability2[0]} </h2>\n          <p id='abilityBody'> {ability2[1]} </p>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Types;\n","import React from \"react\";\n\nexport interface IEntriesProps {\n  entry: string;\n  height: number;\n  weight: number;\n  exp: number;\n}\n\nconst Types: React.FC<IEntriesProps> = (props) => {\n  const { entry, height, weight, exp } = props;\n  return (\n    <div id='entriesContainer'>\n      <h2 className='subTitle' style={{ textAlign: \"center\" }}>\n        Pokedex Entry:\n      </h2>\n      <p id='entryBody'> {entry} </p>\n      <div id='miscContainer'>\n        <h2 className='subTitle' style={{ textAlign: \"center\" }}>\n          Misc:\n        </h2>\n        <p id='miscBody'>\n          <b>Base Experience</b>: {exp}\n        </p>\n        <p id='miscBody'>\n          <b>Height</b>: {height}m\n        </p>\n        <p id='miscBody'>\n          <b>Weight</b>: {weight}kg\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Types;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport Stats from \"./Stats\";\nimport Types from \"./Types\";\nimport Abilities from \"./Abilities\";\nimport Entries from \"./Entries\";\n\nexport interface IDisplayProps {\n  name: string;\n  id: number;\n  number: string;\n}\n\nconst Display: React.FC<IDisplayProps> = (props) => {\n  const { name, number, id } = props;\n\n  const [entry, setEntry] = useState(\"\");\n  const [exp, setExp] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [abilities, setAbilities] = useState([]);\n  const [stats, setStats] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/pokemon-species/${id}/`) //need this call for the entry\n      .then((res) => res.json())\n      .then((result) => {\n        let textentry = result.flavor_text_entries;\n        setEntry(\n          textentry[1].language.name === \"en\"\n            ? textentry[1].flavor_text\n            : textentry[2].flavor_text\n        );\n      });\n    fetch(`https://pokeapi.co/api/v2/pokemon/${name.toLowerCase()}/`) //need this call for all other info\n      .then((res) => res.json())\n      .then((result) => {\n        setHeight(result.height / 10);\n        setWeight(result.weight / 10);\n        setExp(result.base_experience);\n        setAbilities(\n          result.abilities.map((ability: { ability: { url: string } }) =>\n            capitalize(ability.ability.url)\n          )\n        );\n        setStats(result.stats.map((stat: { base_stat: number }) => stat.base_stat));\n        setTypes(\n          result.types.map((type: { type: { name: string } }) =>\n            capitalize(type.type.name)\n          )\n        );\n        setIsLoaded(true);\n      });\n  }, [id, name]);\n\n  useEffect(() => {\n    //setloading to false when we change pokemon and set to true after fetch\n    setIsLoaded(false);\n  }, [id, name]);\n\n  const capitalize = (text: string) => {\n    return text[0].toUpperCase() + text.substring(1);\n  };\n\n  let display = isLoaded ? (\n    <Fragment>\n      {\" \"}\n      <h2 className='title'> {`#${number} - ${name}`} </h2>\n      <div id='displayImgContainer'>\n        <img\n          alt={name}\n          src={`https://raw.githubusercontent.com/fanzeyi/pokemon.json/master/images/${number}.png`}\n        />\n      </div>\n      <div id='displayInfoContainer'>\n        <Types types={types} />\n        <Stats\n          hp={stats[0]}\n          attack={stats[1]}\n          defense={stats[2]}\n          spatk={stats[3]}\n          spdef={stats[4]}\n          speed={stats[5]}\n        />\n      </div>\n      {\n        <div style={{ textAlign: \"center\" }}>\n          <Abilities ability={abilities} />\n          <Entries entry={entry} height={height} weight={weight} exp={exp} />\n        </div>\n      }\n    </Fragment>\n  ) : (\n    <Fragment>\n      <img alt='loading' id='loadingIcon' src='img/loading.gif' />\n    </Fragment>\n  );\n\n  return <div id='displayContainer'>{display}</div>;\n};\n\nexport default Display;\n","import React, { useState } from \"react\";\nimport Menu from \"./Menu\";\nimport Pokedex from \"../pokedex\";\nimport Display from \"./Display\";\n\nexport interface IhomeProps {}\n\nconst Home: React.FC<IhomeProps> = () => {\n  const [currPoke, setCurrPoke] = useState(1);\n\n  const processNumber = (num: number) => {\n    //returns 3 digit form of number\n    let stringNum = num.toString();\n    while (stringNum.length < 3) {\n      stringNum = \"0\" + stringNum;\n    }\n    return stringNum;\n  };\n\n  return (\n    <div>\n      <Menu setCurrPoke={setCurrPoke} processNumber={processNumber} />\n      <div id='mainContainer'>\n        <Display\n          name={Pokedex[currPoke - 1]}\n          number={processNumber(currPoke)}\n          id={currPoke}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./scss/App.scss\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}